const F = {
  chars: {
    vowels: "aeiou".split(""),
    consonants: "bcdfghjklmnpqrstvwxyz".split(""),
    letters: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),
    lowercase: "abcdefghijklmnopqrstuvwxyz".split(""),
    uppercase: "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),
    digits: "0123456789".split(""),
    base64:
      "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789/+".split(
        "",
      ),
    base64Alt:
      "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_".split(
        "",
      ),
    keyboardAll:
      "`~1!2@3#4$5%6^7&8*9(0)-_=+qQwWeErRtTyYuUiIoOpP[{]}\\|aAsSdDfFgGhHjJkKlL;:'\"zZxXcCvVbBnNmM,<.>/?".split(
        "",
      ),
    keyboardNatural: "`1234567890-=qwertyuiop[]\\asdfghjkl;'zxcvbnm,./".split(
      "",
    ),
    keyboardShift: '~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?'.split(""),
    cursive: "𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩".split(""),
    regional: "🇦🇧🇨🇩🇪🇫🇬🇭🇮🇯🇰🇱🇲🇳🇴🇵🇶🇷🇸🇹🇺🇻🇼🇽🇾🇿".split(""),
    emoji: "0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣".split(""),
    html: {
      34: "quot",
      38: "amp",
      39: "apos",
      60: "lt",
      62: "gt",
      160: "nbsp",
      161: "iexcl",
      162: "cent",
      163: "pound",
      164: "curren",
      165: "yen",
      166: "brvbar",
      167: "sect",
      168: "uml",
      169: "copy",
      170: "ordf",
      171: "laquo",
      172: "not",
      173: "shy",
      174: "reg",
      175: "macr",
      176: "deg",
      177: "plusmn",
      178: "sup2",
      179: "sup3",
      180: "acute",
      181: "micro",
      182: "para",
      183: "middot",
      184: "cedil",
      185: "sup1",
      186: "ordm",
      187: "raquo",
      188: "frac14",
      189: "frac12",
      190: "frac34",
      191: "iquest",
      192: "Agrave",
      193: "Aacute",
      194: "Acirc",
      195: "Atilde",
      196: "Auml",
      197: "Aring",
      198: "AElig",
      199: "Ccedil",
      200: "Egrave",
      201: "Eacute",
      202: "Ecirc",
      203: "Euml",
      204: "Igrave",
      205: "Iacute",
      206: "Icirc",
      207: "Iuml",
      208: "ETH",
      209: "Ntilde",
      210: "Ograve",
      211: "Oacute",
      212: "Ocirc",
      213: "Otilde",
      214: "Ouml",
      215: "times",
      216: "Oslash",
      217: "Ugrave",
      218: "Uacute",
      219: "Ucirc",
      220: "Uuml",
      221: "Yacute",
      222: "THORN",
      223: "szlig",
      224: "agrave",
      225: "aacute",
      226: "acirc",
      227: "atilde",
      228: "auml",
      229: "aring",
      230: "aelig",
      231: "ccedil",
      232: "egrave",
      233: "eacute",
      234: "ecirc",
      235: "euml",
      236: "igrave",
      237: "iacute",
      238: "icirc",
      239: "iuml",
      240: "eth",
      241: "ntilde",
      242: "ograve",
      243: "oacute",
      244: "ocirc",
      245: "otilde",
      246: "ouml",
      247: "divide",
      248: "oslash",
      249: "ugrave",
      250: "uacute",
      251: "ucirc",
      252: "uuml",
      253: "yacute",
      254: "thorn",
      255: "yuml",
      402: "fnof",
      913: "Alpha",
      914: "Beta",
      915: "Gamma",
      916: "Delta",
      917: "Epsilon",
      918: "Zeta",
      919: "Eta",
      920: "Theta",
      921: "Iota",
      922: "Kappa",
      923: "Lambda",
      924: "Mu",
      925: "Nu",
      926: "Xi",
      927: "Omicron",
      928: "Pi",
      929: "Rho",
      931: "Sigma",
      932: "Tau",
      933: "Upsilon",
      934: "Phi",
      935: "Chi",
      936: "Psi",
      937: "Omega",
      945: "alpha",
      946: "beta",
      947: "gamma",
      948: "delta",
      949: "epsilon",
      950: "zeta",
      951: "eta",
      952: "theta",
      953: "iota",
      954: "kappa",
      955: "lambda",
      956: "mu",
      957: "nu",
      958: "xi",
      959: "omicron",
      960: "pi",
      961: "rho",
      962: "sigmaf",
      963: "sigma",
      964: "tau",
      965: "upsilon",
      966: "phi",
      967: "chi",
      968: "psi",
      969: "omega",
      977: "thetasym",
      978: "upsih",
      982: "piv",
      8226: "bull",
      8230: "hellip",
      8242: "prime",
      8243: "Prime",
      8254: "oline",
      8260: "frasl",
      8472: "weierp",
      8465: "image",
      8476: "real",
      8482: "trade",
      8501: "alefsym",
      8592: "larr",
      8593: "uarr",
      8594: "rarr",
      8595: "darr",
      8596: "harr",
      8629: "crarr",
      8656: "lArr",
      8657: "uArr",
      8658: "rArr",
      8659: "dArr",
      8660: "hArr",
      8704: "forall",
      8706: "part",
      8707: "exist",
      8709: "empty",
      8711: "nabla",
      8712: "isin",
      8713: "notin",
      8715: "ni",
      8719: "prod",
      8721: "sum",
      8722: "minus",
      8727: "lowast",
      8730: "radic",
      8733: "prop",
      8734: "infin",
      8736: "ang",
      8743: "and",
      8744: "or",
      8745: "cap",
      8746: "cup",
      8747: "int",
      8756: "there4",
      8764: "sim",
      8773: "cong",
      8776: "asymp",
      8800: "ne",
      8801: "equiv",
      8804: "le",
      8805: "ge",
      8834: "sub",
      8835: "sup",
      8836: "nsub",
      8838: "sube",
      8839: "supe",
      8853: "oplus",
      8855: "otimes",
      8869: "perp",
      8901: "sdot",
      8968: "lceil",
      8969: "rceil",
      8970: "lfloor",
      8971: "rfloor",
      9001: "lang",
      9002: "rang",
      9674: "loz",
      9824: "spades",
      9827: "clubs",
      9829: "hearts",
      9830: "diams",
      338: "OElig",
      339: "oelig",
      352: "Scaron",
      353: "scaron",
      376: "Yuml",
      710: "circ",
      732: "tilde",
      8194: "ensp",
      8195: "emsp",
      8201: "thinsp",
      8204: "zwnj",
      8205: "zwj",
      8206: "lrm",
      8207: "rlm",
      8211: "ndash",
      8212: "mdash",
      8216: "lsquo",
      8217: "rsquo",
      8218: "sbquo",
      8220: "ldquo",
      8221: "rdquo",
      8222: "bdquo",
      8224: "dagger",
      8225: "Dagger",
      8240: "permil",
      8249: "lsaquo",
      8250: "rsaquo",
      8364: "euro",
    },
  },
};
(F.env = {
  A: !0,
  DOM: !0,
  NODE: (() => {
    try {
      require;
    } catch {
      return !1;
    }
    return !0;
  })(),
}),
  (F.InputError = class extends Error {
    constructor(t) {
      super(t), (this.name = "F.InputError");
    }
  }),
  (F.EnvError = class extends Error {
    constructor(t) {
      super(`Current environment does not support '${t}'`),
        (this.name = "F.EnvError");
    }
  }),
  (F.fill = function (t, e, r, n) {
    return (
      (t = t || ""),
      (r = (r || " ").repeat(Math.max(0, (e || 10) - t.length))),
      n ? r + t : t + r
    );
  }),
  (F.center = function (t, e, r, n) {
    return (
      (t = t || ""),
      (e = Math.max(0, (e || 10) - t.length) / 2),
      (charFloor = (r || " ").repeat(Math.floor(e))),
      (charCeil = (r || " ").repeat(Math.ceil(e))),
      n ? charCeil + t + charFloor : charFloor + t + charCeil
    );
  }),
  (F.isJSON = function (t) {
    try {
      JSON.parse(t);
    } catch {
      return !1;
    }
    return !0;
  }),
  (F.isURL = function (t) {
    return !!new RegExp(
      "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$",
      "i",
    ).test(t);
  }),
  (F.capitalize = function (t, e, r) {
    if (!t) return t;
    if (e && !r)
      return (
        t.constructor === Array && (t = t.join(" ")),
        t[0].toUpperCase() + t.slice(1).toLowerCase()
      );
    t.constructor === String && (t = t.split(" "));
    var n = "";
    for (var o in t)
      t[o]
        ? (n +=
            " " +
            (e && 0 != o
              ? t[o].toString()[0]
              : t[o].toString()[0].toUpperCase()) +
            (r
              ? t[o].toString().slice(1)
              : t[o].toString().slice(1).toLowerCase()))
        : (n += " " + t[o]);
    return n.slice(1);
  }),
  (F.format = function (t, ...e) {
    if (!e || !t || "string" != typeof t) return t;
    for (var r in ("object" == typeof e[0] && (e = e[0]), e))
      t = t.split("{" + r + "}").join(e[r]);
    return t;
  }),
  (F.escapeHTML = function (t) {
    return t.replace(/[\u00A0-\u2666<>\&]/g, function (t) {
      return (
        "&" + (F.chars.html[t.charCodeAt(0)] || "#" + t.charCodeAt(0)) + ";"
      );
    });
  }),
  (F.truncate = function (t, e, r, n) {
    return t.length <= e
      ? t
      : ((r = r ? r.toString() : ""), t.slice(0, e - (n ? r.length : 0)) + r);
  }),
  (F.replace = function (t, e, r, n) {
    return t
      ? ((t = t.toString()), n ? t.replace(e, r) : t.split(e).join(r))
      : t;
  }),
  (F.hash = function (t) {
    if ("string" != typeof t) return 0;
    var e = 0;
    for (j = 0; j < t.length; j++) {
      var r = t.charCodeAt(j);
      (e = (e << 5) - e + r), (e &= e);
    }
    return e;
  }),
  (F.redact = function (t, e, r) {
    return t.length <= length
      ? t
      : ((e = e || 3),
        (r = r ? r.toString() : "*"),
        e <= 0
          ? r.repeat(t.length)
          : t.slice(0, e) + r.repeat(Math.max(0, t.length - e)));
  }),
  (F.splitAt = function (t, e) {
    return t
      ? ((t = t.toString()),
        (e = e || 3),
        t.match(new RegExp(".{1," + e + "}", "g")))
      : t;
  }),
  (F.randomFloat = function (t, e) {
    return isNaN(e + t)
      ? NaN
      : ((e = Math.max(t, e)),
        (t = Math.min(t, e)),
        Math.random() * (e - t) + t);
  }),
  (F.randomInt = function (t, e) {
    return isNaN(e + t) ? NaN : Math.round(F.randomFloat(t, e));
  }),
  (F.randomChoice = function (t) {
    if (t) return t[F.randomInt(0, t.length - 1)];
  }),
  (F.round = function (t, e) {
    return isNaN(parseFloat(t))
      ? NaN
      : ((e = 10 ** Math.floor(e || 0)), Math.round(t * e) / e);
  }),
  (F.floor = function (t, e) {
    return isNaN(parseFloat(t))
      ? NaN
      : ((e = 10 ** Math.floor(e || 0)), Math.floor(t * e) / e);
  }),
  (F.ceil = function (t, e) {
    return isNaN(parseFloat(t))
      ? NaN
      : ((e = 10 ** Math.floor(e || 0)), Math.ceil(t * e) / e);
  }),
  (F.range = function (t, e, r) {
    (e = Math.max(t, e) || 10), (t = Math.min(t, e) || 0), (r = r || 1);
    var n = [];
    if (r < 0) {
      for (var o = e - 1; o >= t; o += r) n.push(o);
      return n;
    }
    for (o = t; o < e; o += r) n.push(o);
    return n;
  }),
  (F.border = function (t, e, r) {
    return Math.max(e, Math.min(r, t));
  }),
  (F.wrap = function (t, e, r) {
    return F.amod(t - e, r - e) + e;
  }),
  (F.hcf = function (t, e) {
    for (var r = Math.floor(t / 2); r > 1; r--) if (!(t % r || e % r)) return r;
    return 1;
  }),
  (F.lcm = function (t, e) {
    for (var r = 1; r < e; r++) if (!((t * r) % e)) return t * r;
    return t * e;
  }),
  (F.ordinal = function (t) {
    if (isNaN(t)) return NaN;
    switch (((t = Math.floor(t)), t.toString().slice(-1))) {
      case "1":
        return t + "st";
      case "2":
        return t + "nd";
      case "3":
        return t + "rd";
    }
    return t + "th";
  }),
  (F.bool2bin = function (...t) {
    var e = "";
    for (i in t) e += t[i] ? 1 : 0;
    return e;
  }),
  (F.amod = function (t, e) {
    return t - e * Math.floor(t / e);
  }),
  (F.mean = function (...t) {
    t[0] instanceof Array && (t = t[0]);
    var e = 0,
      r = 0;
    for (var n in t) isNaN(parseFloat(t[n])) || ((e += parseFloat(t[n])), r++);
    return e / r;
  }),
  (F.addCommas = function (t, e) {
    if (isNaN(parseFloat(t))) return NaN;
    var r = t.toString().split(".")[0];
    (length = 3 - (r.length % 3)),
      (r = F.splitAt("~".repeat(length > 2 ? 0 : Math.abs(length)) + r)),
      (r[0] = F.replace(r[0], "~", ""));
    var n = t.toString().split(".")[1];
    return e || (n = F.splitAt(n)), r + (n ? "." + n : "");
  }),
  (F.snap = function (t, e, r) {}),
  (F.pythag = function (t, e) {
    return Math.sqrt(t ** 2 + e ** 2);
  }),
  (F.apythag = function (t, e) {
    return Math.sqrt(e ** 2 - t ** 2);
  }),
  (F.sleep = function (t) {
    return new Promise(e => {
      setTimeout(e, t);
    });
  }),
  (F.twelveHour = function (t) {
    return isNaN(parseInt(t)) ? NaN : (t > 12 && (t -= 12), t);
  }),
  (F.parseRelativeTime = function (t, e) {
    var r = [
        { amount: 1e3, prefix: "s", singular: "second", plural: "seconds" },
        { amount: 60, prefix: "m", singular: "minute", plural: "minutes" },
        { amount: 60, prefix: "h", singular: "hour", plural: "hours" },
        { amount: 24, prefix: "d", singular: "day", plural: "days" },
        { amount: 7, prefix: "w", singular: "week", plural: "weeks" },
        { amount: 4.34524, prefix: "M", singular: "month", plural: "months" },
        { amount: 12, prefix: "Y", singular: "year", plural: "years" },
        { amount: 10, prefix: "D", singular: "decade", plural: "decades" },
        { amount: 10, prefix: "C", singular: "century", plural: "centuries" },
      ],
      n = [
        {
          amount: t,
          prefix: "ms",
          singular: "millisecond",
          plural: "millisecond",
        },
      ];
    for (var o in r) {
      if (!(n[0].amount >= r[o].amount)) break;
      n =
        n[0].amount % r[o].amount
          ? [
              { ...r[o], amount: Math.floor(n[0].amount / r[o].amount) },
              { ...n[0], amount: n[0].amount % r[o].amount },
              ...n.slice(1),
            ]
          : [
              { ...r[o], amount: Math.floor(n[0].amount / r[o].amount) },
              ...n.slice(1),
            ];
    }
    return (
      "function" != typeof e &&
        (e = t => {
          for (var e = [], r = 0; r < Math.min(3, t.length); r++) {
            var n = Math.floor(t[r].amount);
            e.push(
              n.toString() + " " + (1 === n ? t[r].singular : t[r].plural),
            );
          }
          return e.join(", ");
        }),
      e(n)
    );
  }),
  (F.getWeek = function (t) {
    return (
      (t && t.constructor == Date) || (t = new Date()),
      (t = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate()))),
      t.setUTCDate(t.getUTCDate() + 4 - (t.getUTCDay() || 7)),
      Math.ceil(
        ((t - new Date(Date.UTC(t.getUTCFullYear(), 0, 1))) / 864e5 + 1) / 7,
      )
    );
  }),
  (F.removeItem = function (t, e, r, n) {
    if (t) {
      var o = !1;
      if (("string" == typeof t && ((o = !0), (t = t.split(""))), r)) {
        var a = [...t.slice(0, e), ...t.slice(e + 1)];
        return o ? a.join("") : a;
      }
      a = [];
      var i = !1;
      for (var u in t) t[u] != e || (n && i) ? a.push(t[u]) : (i = !0);
      return o ? a.join("") : a;
    }
  }),
  (F.shuffle = function (t) {
    for (var e = t.length - 1; e > 0; e--) {
      var r = Math.floor(Math.random() * (e + 1)),
        n = t[e];
      (t[e] = t[r]), (t[r] = n);
    }
    return t;
  }),
  (F.stringify = function (t, e, r, n) {
    if (t) {
      null == e && (e = ": "),
        null == r && (r = "\n"),
        null == n && (n = "    ");
      var o = [];
      for (var a in t) {
        var i = t[a];
        null !== i &&
          "object" == typeof i &&
          (i =
            i instanceof Array
              ? i.length > 0
                ? r + n + F.stringify(i, e, r + n)
                : "[]"
              : Object.keys(i).length > 0
              ? r + n + F.stringify(i, e, r + n)
              : "{}"),
          t instanceof Array ? o.push(i) : o.push([a] + e + i);
      }
      return o.join(r);
    }
  }),
  (F.sort = function (t, e) {}),
  (F.deepCopy = function (t) {
    if ("object" == typeof t) {
      if (t instanceof Array) {
        for (var e = t.length, r = new Array(e), n = 0; n < e; n++)
          r[n] = F.deepCopy(t[n]);
        return r;
      }
      r = {};
      for (var o in ((r.prototype = t.prototype), t)) r[o] = F.deepCopy(t[o]);
      return r;
    }
    return t;
  }),
  (F.decircleJSON = function (t) {
    var e = [];
    return JSON.parse(
      JSON.stringify(t, (t, r) => {
        if ("object" == typeof r && null !== r) {
          if (e.includes(r)) return;
          e.push(r);
        }
        return r;
      }),
    );
  }),
  (F.collide = {}),
  (F.collide.rect2rect = function (t, e) {
    return (
      t.x + t.w > e.x && t.x < e.x + e.w && e.y + e.h > t.y && e.y < t.y + t.h
    );
  }),
  (F.collide.rect2circle = function (t, e) {}),
  (F.collide.circle2circle = function (t, e) {
    return Math.sqrt((t.x - e.x) ** 2 + (t.y - e.y) ** 2) < t.r + e.r;
  }),
  (F.collide.polygons = function (t, e) {}),
  (F.distance = function (t, e, r, n) {
    return Math.sqrt((t - r) ** 2 + (e - n) ** 2);
  }),
  (F.coords2angle = function (t, e, r, n) {
    return 1.5 * Math.PI + Math.atan2(r - t, e - n);
  }),
  (F.angle2coords = function (t, e, r, n) {
    return { x: t + n * Math.cos(r), y: e + n * Math.sin(r) };
  }),
  (F.trace = function (t, e, r, n, o) {}),
  (F.fillCanvas = function (t, e) {
    var r = t.fillStyle;
    (t.fillStyle = e),
      t.fillRect(0, 0, t.canvas.width, t.canvas.height),
      (t.fillStyle = r);
  }),
  (F.clearCanvas = function (t) {
    t.clearRect(0, 0, t.canvas.width, t.canvas.height);
  }),
  (F.fillRoundRect = function (t, e, r, n, o, a) {
    a || 0 === a || (a = Math.min(n, o) / 2),
      n < 2 * a && (a = n / 2),
      o < 2 * a && (a = o / 2),
      t.beginPath(),
      t.moveTo(e + a, r),
      t.arcTo(e + n, r, e + n, r + o, a),
      t.arcTo(e + n, r + o, e, r + o, a),
      t.arcTo(e, r + o, e, r, a),
      t.arcTo(e, r, e + n, r, a),
      t.fill();
  }),
  (F.strokeRoundRect = function (t, e, r, n, o, a) {
    a || 0 === a || (a = Math.min(n, o) / 2),
      n < 2 * a && (a = n / 2),
      o < 2 * a && (a = o / 2),
      t.beginPath(),
      t.moveTo(e + a, r),
      t.arcTo(e + n, r, e + n, r + o, a),
      t.arcTo(e + n, r + o, e, r + o, a),
      t.arcTo(e, r + o, e, r, a),
      t.arcTo(e, r, e + n, r, a),
      t.stroke();
  }),
  (F.getCanvasPixel = function (t, e, r) {}),
  (F.scanCanvas = function (t) {}),
  (F.parseControls = function (t) {
    if (!F.env.DOM) throw F.EnvError("DOM");
    var e = {};
    t: for (var r in t) {
      for (var n in t[r])
        if (F.keys[t[r][n]]) {
          e[r] = !0;
          continue t;
        }
      e[r] = "";
    }
    return e;
  }),
  (F.keys = {}),
  (F.mouse = {}),
  (F.setMouse = function (t) {
    if (!F.env.DOM) throw F.EnvError("DOM");
    var { offsetLeft: e, offsetTop: r } = F.mouse,
      n = {};
    for (var o in F.mouseButtons)
      n[F.mouseButtons[o]] = F.mouse[F.mouseButtons[o]] || !1;
    F.mouse = {
      x: t.clientX - (e || 0),
      y: t.clientY - (r || 0),
      r: 1,
      w: 1,
      h: 1,
      offsetLeft: e,
      offsetTop: r,
      touchDown: !1,
      isFirstTouch: !1,
      ...n,
    };
  }),
  (F.setMouseOffset = function (t) {
    if (!F.env.DOM) throw F.EnvError("DOM");
    (F.mouse.offsetLeft = t.left || 0), (F.mouse.offsetTop = t.top || 0);
  }),
  (F.mouseOnCanvas = function (t, e) {
    if (!F.env.DOM) throw F.EnvError("DOM");
    var r = t.getBoundingClientRect();
    return (
      e && (r = { left: 0, top: 0 }),
      F.mouse.x > r.left &&
        F.mouse.y > r.top &&
        F.mouse.x < t.width + r.left &&
        F.mouse.y < t.height + r.top
    );
  }),
  (F.initEvents = function (t) {
    if (!F.env.DOM) {
      if (t) return !1;
      throw new F.EnvError("DOM");
    }
    (window.onkeydown = function (t) {
      (F.keys[t.key] = !0), (F.keys[t.code] = !0), (F.keys[t.keyCode] = !0);
    }),
      (window.onkeyup = function (t) {
        delete F.keys[t.key], delete F.keys[t.code], delete F.keys[t.keyCode];
      });
    var e = [
      "onclick",
      "ondblclick",
      "onmousemove",
      "onmouseout",
      "onmouseover",
      "onmouseup",
    ];
    for (var r in e) window[e[r]] = F.setMouse;
    (F.mouseButtons = ["left", "middle", "right", "four", "five"]),
      (window.onmousedown = function (t) {
        F.mouse[F.mouseButtons[t.button]] = !0;
      }),
      (window.onmouseup = function (t) {
        F.mouse[F.mouseButtons[t.button]] = !1;
      }),
      addEventListener("touchstart", function (t) {
        F.setMouse(t.touches[0]),
          (F.mouse.touchDown = !0),
          (F.mouse.isFirstTouch = !0);
      }),
      addEventListener("touchmove", function (t) {
        F.setMouse(t.touches[0]), (F.mouse.touchDown = !0);
      }),
      addEventListener("touchend", function (t) {
        F.mouse.touchDown = !1;
      });
  }),
  F.initEvents(!0),
  (F.parseColor = function (t) {}),
  (F.toHex = function (t) {}),
  (F.hex2rgb = function (t) {
    var e;
    return (
      /^#/.test(t) || (t = "#" + t),
      /^#([A-Fa-f0-9]{3}){1,2}$/.test(t)
        ? ((e = t.substring(1).split("")),
          3 == e.length && (e = [e[0], e[0], e[1], e[1], e[2], e[2]]),
          (e = "0x" + e.join("")),
          { r: (e >> 16) & 255, g: (e >> 8) & 255, b: 255 & e })
        : /^#([A-Fa-f0-9]{4}){1,2}$/.test(t)
        ? ((e = t.substring(1).split("")),
          3 == e.length && (e = [e[0], e[0], e[1], e[1], e[2], e[2]]),
          (e = "0x" + e.join("")),
          {
            r: (e >> 24) & 255,
            g: (e >> 16) & 255,
            b: (e >> 8) & 255,
            a: 255 & e,
          })
        : void 0
    );
  }),
  (F.hex2hsv = function (t) {
    return F.rgb2hsv(F.hex2rgb(t));
  }),
  (F.toHex = function (t) {
    if (0 === t) return "00";
    if (t) {
      var e = t.toString(16);
      if (e) return 1 == e.length ? "0" + e.toUpperCase() : e.toUpperCase();
    }
    return "FF";
  }),
  (F.rgb2hex = function (t, e, r, n) {
    if (1 === arguments.length)
      if (t instanceof Object) (e = t.g), (r = t.b), (n = t.a), (t = t.r);
      else {
        if (!(t instanceof Array)) throw new F.InputError("Unknown RGB format");
        (e = h[1]), (r = h[2]), (n = h[3]), (t = t[0]);
      }
    if (null == t || null == e || null == r)
      throw new F.InputError("Unknown RGB format");
    return (
      (t = Math.floor(t)),
      (e = Math.floor(e)),
      (r = Math.floor(r)),
      (n = Math.floor(n)),
      isNaN(n)
        ? "#" + F.toHex(t) + F.toHex(e) + F.toHex(r)
        : "#" + F.toHex(t) + F.toHex(e) + F.toHex(r) + F.toHex(n)
    );
  }),
  (F.rgb2hsv = function (t, e, r, n) {
    if (1 === arguments.length)
      if (t instanceof Object) (e = t.g), (r = t.b), (n = t.a), (t = t.r);
      else {
        if (!(t instanceof Array)) throw new F.InputError("Unknown RGB format");
        (e = o[1]), (r = o[2]), (n = o[3]), (t = t[0]);
      }
    if (null == t || null == e || null == r)
      throw new F.InputError("Unknown RGB format");
    (t = Math.floor(t)),
      (e = Math.floor(e)),
      (r = Math.floor(r)),
      (n = Math.floor(n));
    var o,
      a = Math.max(t, e, r),
      i = Math.min(t, e, r),
      u = a - i,
      l = 0 === a ? 0 : u / a,
      s = a / 255;
    switch (a) {
      case i:
        o = 0;
        break;
      case t:
        (o = e - r + u * (e < r ? 6 : 0)), (o /= 6 * u);
        break;
      case e:
        (o = r - t + 2 * u), (o /= 6 * u);
        break;
      case r:
        (o = t - e + 4 * u), (o /= 6 * u);
    }
    return null != n
      ? {
          h: Math.round(100 * o),
          s: Math.round(100 * l),
          v: Math.round(100 * s),
          a: n,
        }
      : {
          h: Math.round(100 * o),
          s: Math.round(100 * l),
          v: Math.round(100 * s),
        };
  }),
  (F.hsv2hex = function (t, e, r, n) {
    if (1 === arguments.length)
      if (t instanceof Object) (e = t.s), (r = t.v), (t = t.h);
      else {
        if (!(t instanceof Array)) throw new F.InputError("Unknown HSV format");
        (e = t[1]), (r = t[2]), (t = t[0]);
      }
    if (null == t || null == e || null == r)
      throw new F.InputError("Unknown HSV format");
    return (
      (t = Math.floor(t)),
      (e = Math.floor(e)),
      (r = Math.floor(r)),
      (n = Math.floor(n)),
      F.rgb2hex(F.hsv2rgb(t, e, r, n))
    );
  }),
  (F.hsv2rgb = function (t, e, r, n) {
    if (1 === arguments.length)
      if (t instanceof Object) (e = t.s), (r = t.v), (t = t.h);
      else {
        if (!(t instanceof Array)) throw new F.InputError("Unknown HSV format");
        (e = t[1]), (r = t[2]), (t = t[0]);
      }
    if (null == t || null == e || null == r)
      throw new F.InputError("Unknown HSV format");
    var o, a, i, u, l, s, c, f;
    switch (
      ((t = Math.floor(t)),
      (e = Math.floor(e)),
      (r = Math.floor(r)),
      (n = Math.floor(n)),
      (t /= 100),
      (e /= 100),
      (r /= 100),
      (u = Math.floor(6 * t)),
      (l = 6 * t - u),
      (s = r * (1 - e)),
      (c = r * (1 - l * e)),
      (f = r * (1 - (1 - l) * e)),
      u % 6)
    ) {
      case 0:
        (o = r), (a = f), (i = s);
        break;
      case 1:
        (o = c), (a = r), (i = s);
        break;
      case 2:
        (o = s), (a = r), (i = f);
        break;
      case 3:
        (o = s), (a = c), (i = r);
        break;
      case 4:
        (o = f), (a = s), (i = r);
        break;
      case 5:
        (o = r), (a = s), (i = c);
    }
    return isNaN(n)
      ? {
          r: Math.round(255 * o),
          g: Math.round(255 * a),
          b: Math.round(255 * i),
        }
      : {
          r: Math.round(255 * o),
          g: Math.round(255 * a),
          b: Math.round(255 * i),
          a: n,
        };
  }),
  (F.randomHex = function () {
    return F.rgb2hex(
      F.randomInt(0, 256),
      F.randomInt(0, 256),
      F.randomInt(0, 256),
    );
  }),
  (F.cssColors = {}),
  F.env.DOM &&
    ((F.URL = {}),
    (F.getURL = function () {
      var t = location.href,
        e = t.split(":")[0],
        r = t.split("?")[0].split("/").slice(3),
        n = r.slice(-1)[0],
        o = void 0,
        a = !1,
        i = !1;
      switch (e) {
        case "http":
          o = "public";
          break;
        case "https":
          (o = "public"), (i = !0);
          break;
        case "file":
          o = "file";
          break;
        default:
          o = "other";
      }
      "public" === o && ("localhost" === name ? (o = "localhost") : (a = !0));
      var u = t.split("/")[2].split(":")[0].split("."),
        l = u.slice(1).join("."),
        s = u[0];
      !l && s && ((l = s), (s = null)),
        (u && u[0]) || ((u = null), (l = null), (s = null));
      var c = t.split("/")[2].split(":");
      c = c.length < 2 ? null : c.slice(-1)[0];
      var f = t.split("?"),
        h = {};
      if (f.length < 2) f = null;
      else {
        f = f.slice(1).join("?").split("#")[0];
        var p = f.split("&");
        for (var m in p) {
          var d = p[m].split("=");
          d.length < 1 ||
            !d[0] ||
            (1 === d.length
              ? (value = !0)
              : ((value = d[1]),
                parseInt(value) == value
                  ? (value = parseInt(value))
                  : parseFloat(value) == value
                  ? (value = parseFloat(value))
                  : F.isJSON(value)
                  ? (value = JSON.parse(value))
                  : "true" === value
                  ? (value = !0)
                  : "false" === value
                  ? (value = !1)
                  : "null" === value && (value = null)),
            (h[d[0]] = value));
        }
      }
      var g = t.split("#");
      (g = g.length < 2 ? null : g.slice(1)[0]),
        (F.URL = {
          full: t,
          path: r.slice(0, -1).join("/"),
          filepath: r.slice(0).join("/"),
          file: n,
          filename: n.split(".").slice(0, -1).join("."),
          extension: n.split(".").slice(-1)[0],
          protocol: e,
          secure: i,
          status: o,
          online: a,
          host: u ? u.join(".") : null,
          domain: l,
          subdomain: s,
          name: u ? u[1] : null,
          tld: u ? u.slice(2) : null,
          port: c,
          search: f,
          query: h,
          fragment: g,
        });
    }),
    F.getURL(),
    (F.setQuery = function (t, e) {}),
    (F.setCaret = function (t, e) {}),
    (F.getCaret = function (t) {}),
    (F.copy = function (t) {
      if (navigator.clipboard && navigator.clipboard.writeText)
        navigator.clipboard.writeText(t).then(
          function () {},
          function (t) {
            throw t;
          },
        );
      else {
        var e = document.createElement("textarea");
        (e.value = t),
          (e.style.top = "0"),
          (e.style.left = "0"),
          (e.style.position = "fixed"),
          document.body.appendChild(e),
          e.focus(),
          e.select();
        try {
          document.execCommand("copy");
        } catch (t) {}
        document.body.removeChild(e);
      }
    }),
    (F.download = function (t) {})),
  (F.frequency = {}),
  F.env.NODE && (module.exports = F);
